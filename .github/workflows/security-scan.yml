name: AI Security Fixer

on:
  pull_request:
    paths:
      - '*.tf'
      - '*.yaml' 
      - '*.yml'
  push:
    branches: [main]

jobs:
  ai-security-fixer:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        ref: ${{ github.head_ref }}  # Checkout the PR branch

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: pip install boto3

    - name: Configure AWS
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Configure Git
      run: |
        git config --global user.name "AI Security Fixer"
        git config --global user.email "ai@security.com"

    - name: AI Security Analysis & Auto-Fix
      run: python security_analyzer.py

    - name: Push fixes if any
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "Changes detected, pushing fixes..."
          git add .
          git commit -m "ðŸ¤– AI Security Fixes Applied" || echo "No changes to commit"
          git push origin ${{ github.head_ref }} || echo "Push failed but continuing..."
        else
          echo "No changes to push"
        fi

    - name: Comment PR with Results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          if (fs.existsSync('security-results.json')) {
            const results = JSON.parse(fs.readFileSync('security-results.json', 'utf8'));
            
            let comment = `## ðŸ¤– AI Security Fixer Results\n\n`;
            comment += `${results.summary}\n\n`;
            
            if (results.fixes_applied > 0) {
              comment += `### âœ… Auto-Fixed Issues\n`;
              results.issues.forEach(issue => {
                comment += `- **${issue.severity.toUpperCase()}** in \`${issue.file}\`: ${issue.description}\n`;
              });
              comment += `\nðŸš€ **${results.fixes_applied} files automatically updated and pushed!**\n\n`;
            }
            
            comment += `### ðŸ“Š Scan Details\n`;
            comment += `- **Files scanned:** ${results.files_scanned}\n`;
            comment += `- **AI API calls:** ${results.ai_calls}\n`;
            comment += `- **Issues found:** ${results.issues.length}\n`;
            comment += `- **Files fixed:** ${results.fixes_applied}\n\n`;
            
            comment += `ðŸ’° **Cost:** $${results.scan_cost} (Monthly estimate: $${results.estimated_monthly_cost})`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }
