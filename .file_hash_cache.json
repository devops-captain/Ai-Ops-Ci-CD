{
  "test_new_insecure.py": {
    "hash": "3ab7ad5fd142f78970c2a2d2d0a1224cacde45d7bdd330d859ea03eead7e2191",
    "result": {
      "filepath": "test_new_insecure.py",
      "language": "Python",
      "framework": null,
      "issues": [
        {
          "line": 32,
          "severity": "high",
          "category": "Command Injection",
          "description": "The `execute_command` function is vulnerable to command injection due to the use of `subprocess.run` with user input.",
          "cvss": 7.8,
          "compliance_violations": [
            "OWASP Top 10 - A1: Injection"
          ],
          "remediation": "Use a safe alternative to `subprocess.run` that properly sanitizes and validates the user input, such as `shlex.quote` or `subprocess.check_output`.",
          "kb_rule": "Shell Script Security - Input Validation",
          "rfc_document": "general_security.md, general_security.md, sample_kb_content.md",
          "rule_source": "A1: Injection",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        },
        {
          "line": 57,
          "severity": "high",
          "category": "Unsafe Deserialization",
          "description": "The `unsafe_deserialization` function is vulnerable to unsafe deserialization due to the use of `pickle.loads` with untrusted data.",
          "cvss": 7.5,
          "compliance_violations": [
            "OWASP Top 10 - A8: Insecure Deserialization"
          ],
          "remediation": "Use a safer deserialization method or library, such as `json.loads`, or implement proper input validation and sanitization before deserializing the data.",
          "kb_rule": "No KB rules found",
          "rfc_document": "general_security.md, general_security.md, sample_kb_content.md",
          "rule_source": "A8: Insecure Deserialization",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        },
        {
          "type": "vulnerability",
          "vulnerability_id": "CVE-2024-9701",
          "pattern": "deserialization",
          "package": "Python_deserialization",
          "line": 56,
          "severity": "MEDIUM",
          "cvss_score": "Unknown",
          "description": "A Remote Code Execution (RCE) vulnerability has been identified in the Kedro ShelveStore class (version 0.19.8). This vulnerability allows an attacker...",
          "source": "CVE"
        },
        {
          "type": "vulnerability",
          "vulnerability_id": "CVE-2025-3108",
          "pattern": "deserialization",
          "package": "Python_deserialization",
          "line": 56,
          "severity": "HIGH",
          "cvss_score": 7.5,
          "description": "A critical deserialization vulnerability exists in the run-llama/llama_index library's JsonPickleSerializer component, affecting versions v0.12.27 thr...",
          "source": "CVE"
        }
      ],
      "fixed": false,
      "compliance_violations": [
        "OWASP Top 10 - A1: Injection",
        "OWASP Top 10 - A8: Insecure Deserialization"
      ]
    },
    "timestamp": "2025-10-11T22:45:10.207178"
  },
  "test_vuln_demo.py": {
    "hash": "d9b8d8b153a4a751e2fc67019cc5739d7d5b4c07361f2dc0c1024183d212cce6",
    "result": {
      "filepath": "test_vuln_demo.py",
      "language": "Python",
      "framework": null,
      "issues": [
        {
          "line": 8,
          "severity": "high",
          "category": "Secrets Management",
          "description": "Hardcoded API key",
          "cvss": 7.5,
          "compliance_violations": [
            "General Security Patterns - Hardcoded Secrets"
          ],
          "remediation": "Use environment variables or a secrets management service like AWS Secrets Manager to store sensitive information.",
          "kb_rule": "Secrets Management - Hardcoded API keys",
          "rfc_document": "general_security.md, general_security.md, sample_kb_content.md, sample_kb_content.md",
          "rule_source": "Hardcoded Secrets",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        },
        {
          "line": 9,
          "severity": "high",
          "category": "Secrets Management",
          "description": "Hardcoded database password",
          "cvss": 7.5,
          "compliance_violations": [
            "General Security Patterns - Hardcoded Secrets"
          ],
          "remediation": "Use environment variables or a secrets management service like AWS Secrets Manager to store sensitive information.",
          "kb_rule": "Secrets Management - Hardcoded passwords",
          "rfc_document": "general_security.md, general_security.md, sample_kb_content.md, sample_kb_content.md",
          "rule_source": "Hardcoded Secrets",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        },
        {
          "line": 13,
          "severity": "high",
          "category": "Input Validation",
          "description": "Command injection vulnerability",
          "cvss": 8.1,
          "compliance_violations": [
            "Shell Script Security - Input Validation"
          ],
          "remediation": "Use proper input validation and sanitization, such as using the `shlex.quote()` function to escape user input.",
          "kb_rule": "Input Validation - Command injection",
          "rfc_document": "general_security.md, general_security.md, sample_kb_content.md, sample_kb_content.md",
          "rule_source": "Input Validation",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        },
        {
          "line": 20,
          "severity": "high",
          "category": "Input Validation",
          "description": "SQL injection vulnerability",
          "cvss": 8.1,
          "compliance_violations": [
            "Python Security Rules - Input Validation"
          ],
          "remediation": "Use parameterized queries to prevent SQL injection attacks.",
          "kb_rule": "Input Validation - SQL injection",
          "rfc_document": "general_security.md, general_security.md, sample_kb_content.md, sample_kb_content.md",
          "rule_source": "Input Validation",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        },
        {
          "type": "vulnerability",
          "vulnerability_id": "CVE-2024-9701",
          "pattern": "deserialization",
          "package": "Python_deserialization",
          "line": 26,
          "severity": "MEDIUM",
          "cvss_score": "Unknown",
          "description": "A Remote Code Execution (RCE) vulnerability has been identified in the Kedro ShelveStore class (version 0.19.8). This vulnerability allows an attacker...",
          "source": "CVE"
        },
        {
          "type": "vulnerability",
          "vulnerability_id": "CVE-2025-3108",
          "pattern": "deserialization",
          "package": "Python_deserialization",
          "line": 26,
          "severity": "HIGH",
          "cvss_score": 7.5,
          "description": "A critical deserialization vulnerability exists in the run-llama/llama_index library's JsonPickleSerializer component, affecting versions v0.12.27 thr...",
          "source": "CVE"
        }
      ],
      "fixed": false,
      "compliance_violations": [
        "Shell Script Security - Input Validation",
        "Python Security Rules - Input Validation",
        "General Security Patterns - Hardcoded Secrets"
      ]
    },
    "timestamp": "2025-10-11T22:45:23.502943"
  },
  "test_insecure_demo.py": {
    "hash": "b35f70bb1d214324886aa3029ec673f469b10c6ac03cb44e09759e14e9f59915",
    "result": {
      "filepath": "test_insecure_demo.py",
      "language": "Python",
      "framework": null,
      "issues": [
        {
          "line": 20,
          "severity": "high",
          "category": "Input Validation",
          "description": "SQL injection vulnerability in the `get_user_data` function",
          "cvss": 7.5,
          "compliance_violations": [
            "OWASP Top 10 - A1: Injection"
          ],
          "remediation": "Parameterize the SQL query using placeholders and pass the user input as a separate argument to the `execute` method.",
          "kb_rule": "Input Validation",
          "rfc_document": "general_security.md, sample_kb_content.md, sample_kb_content.md, general_security.md",
          "rule_source": "A1: Injection",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/general_security.md"
          ]
        },
        {
          "line": 27,
          "severity": "medium",
          "category": "Secrets Management",
          "description": "Hardcoded admin password in the `authenticate_user` function",
          "cvss": 5.9,
          "compliance_violations": [
            "CWE-798: Use of Hard-coded Credentials"
          ],
          "remediation": "Store the admin password in a secure secrets management service, such as AWS Secrets Manager, and retrieve it using environment variables.",
          "kb_rule": "Secrets Management",
          "rfc_document": "general_security.md, sample_kb_content.md, sample_kb_content.md, general_security.md",
          "rule_source": "Use of Hard-coded Credentials",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/general_security.md"
          ]
        },
        {
          "line": 62,
          "severity": "medium",
          "category": "Secrets Management",
          "description": "Hardcoded JWT secret in the `create_sensitive_file` function",
          "cvss": 5.9,
          "compliance_violations": [
            "CWE-798: Use of Hard-coded Credentials"
          ],
          "remediation": "Store the JWT secret in a secure secrets management service, such as AWS Secrets Manager, and retrieve it using environment variables.",
          "kb_rule": "Secrets Management",
          "rfc_document": "general_security.md, sample_kb_content.md, sample_kb_content.md, general_security.md",
          "rule_source": "Use of Hard-coded Credentials",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/general_security.md"
          ]
        }
      ],
      "fixed": false,
      "compliance_violations": [
        "OWASP Top 10 - A1: Injection",
        "CWE-798: Use of Hard-coded Credentials"
      ]
    },
    "timestamp": "2025-10-11T22:45:34.502870"
  },
  "test_fix_demo.py": {
    "hash": "6c2932043970893d531de5cff9775a64a68da1ddae7a2d1a2a23d5b5fdf7c357",
    "result": {
      "filepath": "test_fix_demo.py",
      "language": "Python",
      "framework": null,
      "issues": [
        {
          "line": 18,
          "severity": "low",
          "category": "Input Validation",
          "description": "The code uses parameterized queries to execute SQL queries, which helps prevent SQL injection vulnerabilities.",
          "cvss": 3.1,
          "compliance_violations": [],
          "remediation": "The code follows the recommended security practice of using parameterized queries to execute SQL queries, as described in the Knowledge Base.",
          "kb_rule": "Input Validation",
          "rfc_document": "general_security.md, sample_kb_content.md, general_security.md, sample_kb_content.md",
          "rule_source": "Knowledge Base",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        },
        {
          "line": 5,
          "severity": "low",
          "category": "Secrets Management",
          "description": "The code uses environment variables to store the API key, which follows the recommended security practice of not hardcoding sensitive information in the source code.",
          "cvss": 2.9,
          "compliance_violations": [],
          "remediation": "The code follows the recommended security practice of using environment variables to store sensitive information, as described in the Knowledge Base.",
          "kb_rule": "Secrets Management",
          "rfc_document": "general_security.md, sample_kb_content.md, general_security.md, sample_kb_content.md",
          "rule_source": "Knowledge Base",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        },
        {
          "line": 7,
          "severity": "low",
          "category": "Secrets Management",
          "description": "The code uses AWS Secrets Manager to retrieve the API key, which follows the recommended security practice of storing sensitive information in a secure location.",
          "cvss": 2.9,
          "compliance_violations": [],
          "remediation": "The code follows the recommended security practice of using AWS Secrets Manager to store and retrieve sensitive information, as described in the Knowledge Base.",
          "kb_rule": "Secrets Management",
          "rfc_document": "general_security.md, sample_kb_content.md, general_security.md, sample_kb_content.md",
          "rule_source": "Knowledge Base",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        },
        {
          "line": 11,
          "severity": "low",
          "category": "Secrets Management",
          "description": "The code uses AWS Secrets Manager to retrieve the database password, which follows the recommended security practice of storing sensitive information in a secure location.",
          "cvss": 2.9,
          "compliance_violations": [],
          "remediation": "The code follows the recommended security practice of using AWS Secrets Manager to store and retrieve sensitive information, as described in the Knowledge Base.",
          "kb_rule": "Secrets Management",
          "rfc_document": "general_security.md, sample_kb_content.md, general_security.md, sample_kb_content.md",
          "rule_source": "Knowledge Base",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        }
      ],
      "fixed": false,
      "compliance_violations": []
    },
    "timestamp": "2025-10-11T22:45:45.215381"
  },
  "test_noncompliant.py": {
    "hash": "8f94a6c4eb9483e1f44d92eda9a4cfb1fc974e90518bbc0407fd16a8980be2c9",
    "result": {
      "filepath": "test_noncompliant.py",
      "language": "Python",
      "framework": null,
      "issues": [
        {
          "line": 17,
          "severity": "medium",
          "category": "Secrets Management",
          "description": "Hardcoded secret key for JWT authentication",
          "cvss": 5.9,
          "compliance_violations": [
            "OWASP Top 10 - A2: Cryptographic Failures",
            "CWE-798: Use of Hard-coded Credentials"
          ],
          "remediation": "Use AWS Secrets Manager to store and retrieve the JWT secret key",
          "kb_rule": "Secrets Management - Hardcoded API keys",
          "rfc_document": "sample_kb_content.md, general_security.md, sample_kb_content.md, sample_kb_content.md",
          "rule_source": "A2: Cryptographic Failures",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        }
      ],
      "fixed": false,
      "compliance_violations": [
        "OWASP Top 10 - A2: Cryptographic Failures",
        "CWE-798: Use of Hard-coded Credentials"
      ]
    },
    "timestamp": "2025-10-11T22:45:54.719735"
  },
  "test_javascript.js": {
    "hash": "54c3038d87c5e1dcb0fa45ec635b941dfb6d41d96a76e1d6f3653c00a35c8854",
    "result": {
      "filepath": "test_javascript.js",
      "language": "JavaScript",
      "framework": null,
      "issues": [
        {
          "line": 5,
          "severity": "low",
          "category": "Secrets Management",
          "description": "Environment variables are used to store sensitive data like API_KEY, which is a recommended security practice.",
          "cvss": 0,
          "compliance_violations": [],
          "remediation": "Continue using environment variables to store sensitive data.",
          "kb_rule": "Secrets Management",
          "rfc_document": "sample_kb_content.md",
          "rule_source": "Secrets Management",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        },
        {
          "line": 9,
          "severity": "low",
          "category": "Dependency Management",
          "description": "The code is using specific versions of the dependencies (MongoDB, Express, Lodash) to ensure known vulnerabilities are fixed, which is a good security practice.",
          "cvss": 0,
          "compliance_violations": [],
          "remediation": "Continue using specific versions of dependencies and pin the versions to fix known vulnerabilities.",
          "kb_rule": "Dependency Management",
          "rfc_document": "sample_kb_content.md",
          "rule_source": "Dependency Management",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        }
      ],
      "fixed": false,
      "compliance_violations": []
    },
    "timestamp": "2025-10-11T22:46:03.353923"
  },
  "test_simulation.tf": {
    "hash": "e80f39cdca526397560dba7a855b0a5374a4ce36179588e6c6c7d21edde238b6",
    "result": {
      "filepath": "test_simulation.tf",
      "language": "Terraform",
      "framework": null,
      "issues": [
        {
          "line": 35,
          "severity": "medium",
          "category": "Security Group",
          "description": "Security group rule allows HTTPS traffic from any IP address (0.0.0.0/0)",
          "cvss": 5.3,
          "compliance_violations": [
            "CIS AWS Foundations Benchmark 4.1"
          ],
          "remediation": "Restrict the HTTPS security group rule to only the necessary IP addresses or ranges that require access.",
          "kb_rule": "Security Groups - Never use 0.0.0.0/0 for SSH (port 22) - Restrict to specific IPs: `cidr_blocks = [\"YOUR_IP/32\"]`",
          "rfc_document": "terraform_security.md, terraform_security.md",
          "rule_source": "Security Knowledge Base",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/terraform_security.md",
            "s3://ai-security-kb-docs-2025/terraform_security.md"
          ]
        }
      ],
      "fixed": false,
      "compliance_violations": [
        "CIS AWS Foundations Benchmark 4.1"
      ]
    },
    "timestamp": "2025-10-11T22:46:12.101965"
  },
  "test_terraform.tf": {
    "hash": "d131ac22341a2a976b5edee6bdd2c194d4e051d16767f5022588e1b90e44ca7b",
    "result": {
      "filepath": "test_terraform.tf",
      "language": "Terraform",
      "framework": null,
      "issues": [
        {
          "line": 48,
          "severity": "medium",
          "category": "Security Group",
          "description": "Security group allows HTTPS access from 0.0.0.0/0 (the entire internet)",
          "cvss": 5.3,
          "compliance_violations": [
            "CIS AWS Foundations Benchmark 4.1"
          ],
          "remediation": "Restrict HTTPS access to only the necessary IP ranges or security groups",
          "kb_rule": "Security Group Rules - Never use 0.0.0.0/0 for SSH (port 22)",
          "rfc_document": "terraform_security.md",
          "rule_source": "Security Group Rules",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/terraform_security.md"
          ]
        },
        {
          "line": 55,
          "severity": "medium",
          "category": "Security Group",
          "description": "Security group allows all outbound traffic (0.0.0.0/0)",
          "cvss": 5.3,
          "compliance_violations": [
            "CIS AWS Foundations Benchmark 4.2"
          ],
          "remediation": "Restrict outbound traffic to only the necessary IP ranges or security groups",
          "kb_rule": "Security Group Rules - Use least privilege principle",
          "rfc_document": "terraform_security.md",
          "rule_source": "Security Group Rules",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/terraform_security.md"
          ]
        },
        {
          "line": 73,
          "severity": "high",
          "category": "Database Security",
          "description": "Database is publicly accessible",
          "cvss": 8.2,
          "compliance_violations": [
            "CIS AWS Foundations Benchmark 3.7"
          ],
          "remediation": "Set `publicly_accessible = false` to make the database private",
          "kb_rule": "Database Security - Set `publicly_accessible = false`",
          "rfc_document": "terraform_security.md",
          "rule_source": "Database Security",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/terraform_security.md"
          ]
        }
      ],
      "fixed": false,
      "compliance_violations": [
        "CIS AWS Foundations Benchmark 4.2",
        "CIS AWS Foundations Benchmark 4.1",
        "CIS AWS Foundations Benchmark 3.7"
      ]
    },
    "timestamp": "2025-10-11T22:46:21.188548"
  },
  "test_insecure.tf": {
    "hash": "2fe64c1ffc2048e68ebbc440c97b13d6f948567811fe17597830907b25555c9f",
    "result": {
      "filepath": "test_insecure.tf",
      "language": "Terraform",
      "framework": null,
      "issues": [
        {
          "line": 40,
          "severity": "medium",
          "category": "Security Group",
          "description": "Security group allows HTTPS traffic from any IP address (0.0.0.0/0)",
          "cvss": 5.3,
          "compliance_violations": [
            "CIS AWS Foundations Benchmark 4.1"
          ],
          "remediation": "Restrict HTTPS traffic to only the necessary IP addresses or ranges using the `cidr_blocks` parameter.",
          "kb_rule": "Security Groups - Never use 0.0.0.0/0 for SSH (port 22) - Restrict to specific IPs: `cidr_blocks = [\"YOUR_IP/32\"]`",
          "rfc_document": "terraform_security.md",
          "rule_source": "Security Knowledge Base",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/terraform_security.md"
          ]
        }
      ],
      "fixed": false,
      "compliance_violations": [
        "CIS AWS Foundations Benchmark 4.1"
      ]
    },
    "timestamp": "2025-10-11T22:46:29.431520"
  }
}