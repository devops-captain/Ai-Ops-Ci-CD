{
  "test_insecure_demo.py": {
    "hash": "7244387ac0d635dc0948e63435c296ca9971e45740d66ccf856ad8f0dbb7171f",
    "result": {
      "filepath": "test_insecure_demo.py",
      "language": "Python",
      "framework": null,
      "issues": [
        {
          "line": 21,
          "severity": "medium",
          "category": "Input Validation",
          "description": "Potential SQL injection vulnerability due to using string formatting to build the SQL query",
          "cvss": 6.5,
          "compliance_violations": [
            "OWASP Top 10 - A1: Injection"
          ],
          "remediation": "Use parameterized queries to prevent SQL injection attacks",
          "kb_rule": "Input Validation",
          "rfc_document": "sample_kb_content.md, sample_kb_content.md, general_security.md, sample_kb_content.md",
          "rule_source": "A1: Injection",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        },
        {
          "line": 28,
          "severity": "high",
          "category": "Secrets Management",
          "description": "Hardcoded admin password in the code",
          "cvss": 8.1,
          "compliance_violations": [
            "CWE-798: Use of Hard-coded Credentials"
          ],
          "remediation": "Store the admin password as an environment variable or use a secrets management service",
          "kb_rule": "Secrets Management",
          "rfc_document": "sample_kb_content.md, sample_kb_content.md, general_security.md, sample_kb_content.md",
          "rule_source": "Use of Hard-coded Credentials",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        }
      ],
      "fixed": true,
      "compliance_violations": [
        "OWASP Top 10 - A1: Injection",
        "CWE-798: Use of Hard-coded Credentials"
      ]
    },
    "timestamp": "2025-10-10T17:36:48.061573"
  },
  "fix_manifest.py": {
    "hash": "677293c43595ad5a67c393276f6a407f9c20230e331d607beb96cd77c6bb86c1",
    "result": {
      "filepath": "fix_manifest.py",
      "language": "Python",
      "framework": null,
      "issues": [
        {
          "line": 9,
          "severity": "low",
          "category": "Secrets Management",
          "description": "The code uses the `boto3.client('secretsmanager')` function to retrieve a secret value from AWS Secrets Manager, which is a recommended practice for handling sensitive information.",
          "cvss": 2,
          "compliance_violations": [],
          "remediation": "No remediation needed, the code is following the recommended practice.",
          "kb_rule": "Secrets Management",
          "rfc_document": "sample_kb_content.md, sample_kb_content.md, sample_kb_content.md",
          "rule_source": "Knowledge Base",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        },
        {
          "line": 11,
          "severity": "low",
          "category": "Secrets Management",
          "description": "The code retrieves the S3 bucket name from the AWS Secrets Manager, which is a recommended practice for storing and accessing sensitive information.",
          "cvss": 2,
          "compliance_violations": [],
          "remediation": "No remediation needed, the code is following the recommended practice.",
          "kb_rule": "Secrets Management",
          "rfc_document": "sample_kb_content.md, sample_kb_content.md, sample_kb_content.md",
          "rule_source": "Knowledge Base",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        },
        {
          "line": 29,
          "severity": "low",
          "category": "S3 Bucket Security",
          "description": "The code uses the `ServerSideEncryption='AES256'` option when uploading the reports manifest to the S3 bucket, which is a recommended practice for ensuring data encryption at rest.",
          "cvss": 2,
          "compliance_violations": [],
          "remediation": "No remediation needed, the code is following the recommended practice.",
          "kb_rule": "S3 Bucket Security",
          "rfc_document": "sample_kb_content.md, sample_kb_content.md, sample_kb_content.md",
          "rule_source": "Knowledge Base",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        }
      ],
      "fixed": true,
      "compliance_violations": []
    },
    "timestamp": "2025-10-10T17:36:59.753535"
  },
  "test_noncompliant.py": {
    "hash": "8f94a6c4eb9483e1f44d92eda9a4cfb1fc974e90518bbc0407fd16a8980be2c9",
    "result": {
      "filepath": "test_noncompliant.py",
      "language": "Python",
      "framework": null,
      "issues": [
        {
          "line": 17,
          "severity": "high",
          "category": "Secrets Management",
          "description": "Hardcoded JWT secret key",
          "cvss": 7.5,
          "compliance_violations": [
            "OWASP Top 10: A2 - Cryptographic Failures"
          ],
          "remediation": "Use AWS Secrets Manager to store and retrieve the JWT secret key",
          "kb_rule": "Secrets Management - NEVER use: - jwt-secret = \"hardcoded_key\"",
          "rfc_document": "sample_kb_content.md, general_security.md, sample_kb_content.md",
          "rule_source": "A2 - Cryptographic Failures",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        }
      ],
      "fixed": false,
      "compliance_violations": [
        "OWASP Top 10: A2 - Cryptographic Failures"
      ]
    },
    "timestamp": "2025-10-10T17:37:23.156949"
  },
  "src/compliance_scanner.py": {
    "hash": "6655a8b7d03ab34ff18311cf2ed7c19dc48105ebad740f65c30947a50238ac44",
    "result": {
      "filepath": "src/compliance_scanner.py",
      "language": "Python",
      "framework": "Django",
      "issues": [
        {
          "line": 79,
          "severity": "medium",
          "category": "Input Validation",
          "description": "Potential SQL injection vulnerability due to string formatting of user input",
          "cvss": 6.5,
          "compliance_violations": [
            "OWASP Top 10"
          ],
          "remediation": "Use parameterized queries to prevent SQL injection",
          "kb_rule": "Input Validation: Use parameterized queries to prevent SQL injection",
          "rfc_document": "sample_kb_content.md, sample_kb_content.md, sample_kb_content.md",
          "rule_source": "OWASP Top 10",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        },
        {
          "line": 85,
          "severity": "high",
          "category": "Secrets Management",
          "description": "Hardcoded API key in the code",
          "cvss": 7.5,
          "compliance_violations": [
            "PCI-DSS",
            "SOC2",
            "HIPAA",
            "GDPR"
          ],
          "remediation": "Store API keys in a secure secrets management service like AWS Secrets Manager",
          "kb_rule": "Secrets Management: Never hardcode sensitive information like API keys",
          "rfc_document": "sample_kb_content.md, sample_kb_content.md, sample_kb_content.md",
          "rule_source": "General Security Patterns",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        }
      ],
      "fixed": false,
      "compliance_violations": [
        "OWASP Top 10",
        "PCI-DSS",
        "SOC2",
        "HIPAA",
        "GDPR"
      ]
    },
    "timestamp": "2025-10-10T13:49:23.413314"
  },
  "test_javascript.js": {
    "hash": "54c3038d87c5e1dcb0fa45ec635b941dfb6d41d96a76e1d6f3653c00a35c8854",
    "result": {
      "filepath": "test_javascript.js",
      "language": "JavaScript",
      "framework": null,
      "issues": [
        {
          "line": 13,
          "severity": "medium",
          "category": "Command Injection",
          "description": "The `exec` function is used to execute a command with user input, which can lead to command injection vulnerabilities.",
          "cvss": 6.5,
          "compliance_violations": [
            "CIS Controls"
          ],
          "remediation": "Use a safe alternative to execute commands, such as the `child_process.spawn()` method, and properly validate and sanitize the user input before using it in the command.",
          "kb_rule": "Input Validation",
          "rfc_document": "general_security.md, general_security.md",
          "rule_source": "Shell Script Security",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/general_security.md"
          ]
        },
        {
          "line": 89,
          "severity": "medium",
          "category": "Sensitive Data Exposure",
          "description": "The payment card number and CVV are being logged, which can lead to sensitive data exposure.",
          "cvss": 5.9,
          "compliance_violations": [
            "PCI DSS"
          ],
          "remediation": "Avoid logging or displaying sensitive payment information. Use a secure payment processing service or library that handles the sensitive data securely.",
          "kb_rule": "Hardcoded Secrets",
          "rfc_document": "general_security.md, general_security.md",
          "rule_source": "General Security Patterns",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/general_security.md"
          ]
        },
        {
          "line": 120,
          "severity": "medium",
          "category": "Weak Authentication",
          "description": "The application is using a hardcoded JWT secret, which can lead to weak authentication and authorization mechanisms.",
          "cvss": 6.1,
          "compliance_violations": [
            "OWASP Top 10"
          ],
          "remediation": "Use a secure token or session management mechanism instead of a hardcoded JWT secret. Consider using a secure key management service or encrypted environment variables to store sensitive secrets.",
          "kb_rule": "Hardcoded Secrets",
          "rfc_document": "general_security.md, general_security.md",
          "rule_source": "General Security Patterns",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/general_security.md"
          ]
        }
      ],
      "fixed": false,
      "compliance_violations": [
        "PCI DSS",
        "CIS Controls",
        "OWASP Top 10"
      ]
    },
    "timestamp": "2025-10-10T17:37:39.297470"
  },
  "test_terraform.tf": {
    "hash": "d131ac22341a2a976b5edee6bdd2c194d4e051d16767f5022588e1b90e44ca7b",
    "result": {
      "filepath": "test_terraform.tf",
      "language": "Terraform",
      "framework": null,
      "issues": [
        {
          "line": 48,
          "severity": "medium",
          "category": "Security Group",
          "description": "Security group allows inbound traffic from 0.0.0.0/0 on port 443 (HTTPS)",
          "cvss": 5.3,
          "compliance_violations": [
            "CIS AWS Foundations Benchmark 4.1"
          ],
          "remediation": "Restrict the HTTPS ingress rule to a specific IP range or a trusted set of IP addresses.",
          "kb_rule": "Security Group Rules - Never use 0.0.0.0/0 for SSH (port 22) - Restrict to specific IPs: `cidr_blocks = [\"YOUR_IP/32\"]`",
          "rfc_document": "terraform_security.md",
          "rule_source": "Security Group Rules",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/terraform_security.md"
          ]
        }
      ],
      "fixed": false,
      "compliance_violations": [
        "CIS AWS Foundations Benchmark 4.1"
      ]
    },
    "timestamp": "2025-10-10T17:38:10.323667"
  },
  "test_insecure.tf": {
    "hash": "a0e6b7d944124110abf2b511efc4f3b81c008b32f7b9e97e031de80d2916e312",
    "result": {
      "filepath": "test_insecure.tf",
      "language": "Terraform",
      "framework": null,
      "issues": [
        {
          "line": 40,
          "severity": "medium",
          "category": "Security Group",
          "description": "Security group allows public access to port 443 (HTTPS)",
          "cvss": 5.3,
          "compliance_violations": [
            "CIS AWS Foundations Benchmark 4.1"
          ],
          "remediation": "Restrict access to HTTPS port (443) to only the necessary IP addresses or security groups",
          "kb_rule": "Security Groups - Never use 0.0.0.0/0 for SSH (port 22) - Restrict to specific IPs: `cidr_blocks = [\"YOUR_IP/32\"]`",
          "rfc_document": "terraform_security.md",
          "rule_source": "Security Knowledge Base",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/terraform_security.md"
          ]
        }
      ],
      "fixed": false,
      "compliance_violations": [
        "CIS AWS Foundations Benchmark 4.1"
      ]
    },
    "timestamp": "2025-10-10T17:38:32.561912"
  },
  "test_simulation.tf": {
    "hash": "fe68d38c01dd58e4694f2a236076435d6971030ab50958a927f99b10fc772017",
    "result": {
      "filepath": "test_simulation.tf",
      "language": "Terraform",
      "framework": null,
      "issues": [
        {
          "line": 35,
          "severity": "medium",
          "category": "Security Group",
          "description": "The security group allows HTTPS (port 443) access from any IP address (0.0.0.0/0), which is a broad and potentially insecure configuration.",
          "cvss": 5.3,
          "compliance_violations": [
            "CIS AWS Foundations Benchmark 4.1"
          ],
          "remediation": "Restrict the HTTPS access to only the necessary IP addresses or ranges using the `cidr_blocks` parameter.",
          "kb_rule": "Security Groups - Never use 0.0.0.0/0 for SSH (port 22) - Restrict to specific IPs: `cidr_blocks = [\"YOUR_IP/32\"]`",
          "rfc_document": "terraform_security.md, terraform_security.md",
          "rule_source": "Section 4.1",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/terraform_security.md",
            "s3://ai-security-kb-docs-2025/terraform_security.md"
          ]
        }
      ],
      "fixed": false,
      "compliance_violations": [
        "CIS AWS Foundations Benchmark 4.1"
      ]
    },
    "timestamp": "2025-10-10T13:49:58.314058"
  },
  "test_kubernetes.yaml": {
    "hash": "1ddc5c6a8b4fb25aa9a2a2c784ff3cc8d51d943537c3575587fa8c239d6e5bb6",
    "result": {
      "filepath": "test_kubernetes.yaml",
      "language": "Kubernetes",
      "framework": null,
      "issues": [
        {
          "line": 19,
          "severity": "medium",
          "category": "Network Security",
          "description": "The deployment allows host network access, which increases the attack surface.",
          "cvss": 5.5,
          "compliance_violations": [
            "PCI-DSS 1.3.4",
            "OWASP Top 10 A3"
          ],
          "remediation": "Set `hostNetwork: false` to disable host network access.",
          "kb_rule": "Kubernetes Security Best Practices - Network Security",
          "rfc_document": "kubernetes_security.md",
          "rule_source": "PCI-DSS 1.3.4",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/kubernetes_security.md"
          ]
        },
        {
          "line": 20,
          "severity": "medium",
          "category": "Container Security",
          "description": "The deployment allows host PID access, which increases the attack surface.",
          "cvss": 5.5,
          "compliance_violations": [
            "PCI-DSS 2.2.3",
            "OWASP Top 10 A5",
            "HIPAA 164.308(a)(1)(ii)(B)"
          ],
          "remediation": "Set `hostPID: false` to disable host PID access.",
          "kb_rule": "Kubernetes Security Best Practices - Pod Security",
          "rfc_document": "kubernetes_security.md",
          "rule_source": "PCI-DSS 2.2.3, HIPAA 164.308(a)(1)(ii)(B)",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/kubernetes_security.md"
          ]
        },
        {
          "line": 27,
          "severity": "high",
          "category": "Container Security",
          "description": "The container is running as root, which increases the risk of privilege escalation.",
          "cvss": 7.8,
          "compliance_violations": [
            "PCI-DSS 2.2.1",
            "OWASP Top 10 A5",
            "HIPAA 164.308(a)(1)(ii)(B)"
          ],
          "remediation": "Set `securityContext.runAsUser` to a non-root user ID and `securityContext.runAsNonRoot` to `true`.",
          "kb_rule": "Kubernetes Security Best Practices - Pod Security",
          "rfc_document": "kubernetes_security.md",
          "rule_source": "PCI-DSS 2.2.1, HIPAA 164.308(a)(1)(ii)(B)",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/kubernetes_security.md"
          ]
        },
        {
          "line": 29,
          "severity": "high",
          "category": "Container Security",
          "description": "The container is running in privileged mode, which increases the risk of privilege escalation.",
          "cvss": 7.8,
          "compliance_violations": [
            "PCI-DSS 2.2.3",
            "OWASP Top 10 A5",
            "HIPAA 164.308(a)(1)(ii)(B)"
          ],
          "remediation": "Set `securityContext.privileged` to `false` to disable privileged mode.",
          "kb_rule": "Kubernetes Security Best Practices - Pod Security",
          "rfc_document": "kubernetes_security.md",
          "rule_source": "PCI-DSS 2.2.3, HIPAA 164.308(a)(1)(ii)(B)",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/kubernetes_security.md"
          ]
        },
        {
          "line": 30,
          "severity": "high",
          "category": "Container Security",
          "description": "The container is allowed to perform privilege escalation, which increases the risk of privilege escalation.",
          "cvss": 7.8,
          "compliance_violations": [
            "PCI-DSS 2.2.3",
            "OWASP Top 10 A5",
            "HIPAA 164.308(a)(1)(ii)(B)"
          ],
          "remediation": "Set `securityContext.allowPrivilegeEscalation` to `false` to prevent privilege escalation.",
          "kb_rule": "Kubernetes Security Best Practices - Pod Security",
          "rfc_document": "kubernetes_security.md",
          "rule_source": "PCI-DSS 2.2.3, HIPAA 164.308(a)(1)(ii)(B)",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/kubernetes_security.md"
          ]
        },
        {
          "line": 97,
          "severity": "medium",
          "category": "Container Security",
          "description": "The busybox image version is vulnerable to CVE-2022-28391.",
          "cvss": 6.5,
          "compliance_violations": [
            "PCI-DSS 6.2",
            "OWASP Top 10 A6"
          ],
          "remediation": "Update the busybox image to a non-vulnerable version.",
          "kb_rule": "Kubernetes Security Best Practices - Pod Security",
          "rfc_document": "kubernetes_security.md",
          "rule_source": "PCI-DSS 6.2",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/kubernetes_security.md"
          ]
        },
        {
          "line": 99,
          "severity": "medium",
          "category": "Container Security",
          "description": "The container is allowed to access the host's process namespace, which increases the attack surface.",
          "cvss": 5.5,
          "compliance_violations": [
            "PCI-DSS 2.2.3",
            "OWASP Top 10 A5"
          ],
          "remediation": "Set `shareProcessNamespace: false` to disable access to the host's process namespace.",
          "kb_rule": "Kubernetes Security Best Practices - Pod Security",
          "rfc_document": "kubernetes_security.md",
          "rule_source": "PCI-DSS 2.2.3",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/kubernetes_security.md"
          ]
        },
        {
          "line": 102,
          "severity": "medium",
          "category": "Container Security",
          "description": "The container is allowed to access unsafe sysctls, which increases the attack surface.",
          "cvss": 5.5,
          "compliance_violations": [
            "PCI-DSS 2.2.3",
            "OWASP Top 10 A5"
          ],
          "remediation": "Remove the `securityContext.sysctls` field to prevent the container from accessing unsafe sysctls.",
          "kb_rule": "Kubernetes Security Best Practices - Pod Security",
          "rfc_document": "kubernetes_security.md",
          "rule_source": "PCI-DSS 2.2.3",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/kubernetes_security.md"
          ]
        },
        {
          "line": 106,
          "severity": "medium",
          "category": "Container Security",
          "description": "The container is allowed to mount sensitive host paths, which increases the risk of data exposure.",
          "cvss": 5.5,
          "compliance_violations": [
            "PCI-DSS 3.4",
            "HIPAA 164.312(a)(1)",
            "GDPR Article 32"
          ],
          "remediation": "Remove the `volumeMounts` field to prevent the container from mounting sensitive host paths.",
          "kb_rule": "Kubernetes Security Best Practices - Pod Security",
          "rfc_document": "kubernetes_security.md",
          "rule_source": "PCI-DSS 3.4, HIPAA 164.312(a)(1), GDPR Article 32",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/kubernetes_security.md"
          ]
        },
        {
          "line": 139,
          "severity": "high",
          "category": "Secrets Management",
          "description": "The database password is stored in plaintext in the Kubernetes secret.",
          "cvss": 7.5,
          "compliance_violations": [
            "PCI-DSS 3.4",
            "HIPAA 164.312(a)(1)",
            "GDPR Article 32"
          ],
          "remediation": "Encode the database password using base64 encoding before storing it in the Kubernetes secret.",
          "kb_rule": "Kubernetes Security Best Practices - Secrets Management",
          "rfc_document": "kubernetes_security.md",
          "rule_source": "PCI-DSS 3.4, HIPAA 164.312(a)(1), GDPR Article 32",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/kubernetes_security.md"
          ]
        },
        {
          "line": 140,
          "severity": "high",
          "category": "Secrets Management",
          "description": "The API key is stored in plaintext in the Kubernetes secret.",
          "cvss": 7.5,
          "compliance_violations": [
            "PCI-DSS 3.4",
            "HIPAA 164.312(a)(1)",
            "GDPR Article 32"
          ],
          "remediation": "Encode the API key using base64 encoding before storing it in the Kubernetes secret.",
          "kb_rule": "Kubernetes Security Best Practices - Secrets Management",
          "rfc_document": "kubernetes_security.md",
          "rule_source": "PCI-DSS 3.4, HIPAA 164.312(a)(1), GDPR Article 32",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/kubernetes_security.md"
          ]
        },
        {
          "line": 141,
          "severity": "high",
          "category": "Secrets Management",
          "description": "The JWT secret is stored in plaintext in the Kubernetes secret.",
          "cvss": 7.5,
          "compliance_violations": [
            "PCI-DSS 3.4",
            "HIPAA 164.312(a)(1)",
            "GDPR Article 32"
          ],
          "remediation": "Encode the JWT secret using base64 encoding before storing it in the Kubernetes secret.",
          "kb_rule": "Kubernetes Security Best Practices - Secrets Management",
          "rfc_document": "kubernetes_security.md",
          "rule_source": "PCI-DSS 3.4, HIPAA 164.312(a)(1), GDPR Article 32",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/kubernetes_security.md"
          ]
        },
        {
          "line": 84,
          "severity": "medium",
          "category": "Network Security",
          "description": "The LoadBalancer service allows access from any IP address (0.0.0.0/0), which increases the attack surface.",
          "cvss": 5.5,
          "compliance_violations": [
            "PCI-DSS 1.3.4",
            "OWASP Top 10 A3"
          ],
          "remediation": "Restrict the `loadBalancerSourceRanges` to a specific IP range or CIDR block to limit access to the service.",
          "kb_rule": "Kubernetes Security Best Practices - Network Security",
          "rfc_document": "kubernetes_security.md",
          "rule_source": "PCI-DSS 1.3.4",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/kubernetes_security.md"
          ]
        },
        {
          "line": 120,
          "severity": "high",
          "category": "Network Security",
          "description": "The NetworkPolicy does not restrict all ingress and egress traffic, which increases the attack surface.",
          "cvss": 7.5,
          "compliance_violations": [
            "PCI-DSS 1.3.4",
            "OWASP Top 10 A3"
          ],
          "remediation": "Implement a more restrictive NetworkPolicy that denies all ingress and egress traffic by default, and then selectively allows necessary traffic.",
          "kb_rule": "Kubernetes Security Best Practices - Network Security",
          "rfc_document": "kubernetes_security.md",
          "rule_source": "PCI-DSS 1.3.4",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/kubernetes_security.md"
          ]
        },
        {
          "line": 214,
          "severity": "high",
          "category": "Pod Security",
          "description": "The MutatingWebhookConfiguration is not implemented, which means pod security policies are not enforced.",
          "cvss": 7.5,
          "compliance_violations": [
            "PCI-DSS 2.2.3",
            "OWASP Top 10 A5",
            "HIPAA 164.308(a)(1)(ii)(B)"
          ],
          "remediation": "Implement a MutatingWebhookConfiguration to enforce pod security policies, such as running containers as a non-root user, disabling privilege escalation, and setting resource limits.",
          "kb_rule": "Kubernetes Security Best Practices - Pod Security",
          "rfc_document": "kubernetes_security.md",
          "rule_source": "PCI-DSS 2.2.3, HIPAA 164.308(a)(1)(ii)(B)",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/kubernetes_security.md"
          ]
        }
      ],
      "fixed": false,
      "compliance_violations": [
        "PCI-DSS 1.3.4",
        "HIPAA 164.312(a)(1)",
        "OWASP Top 10 A6",
        "OWASP Top 10 A5",
        "OWASP Top 10 A3",
        "PCI-DSS 3.4",
        "PCI-DSS 2.2.1",
        "PCI-DSS 6.2",
        "HIPAA 164.308(a)(1)(ii)(B)",
        "PCI-DSS 2.2.3",
        "GDPR Article 32"
      ]
    },
    "timestamp": "2025-10-10T13:50:29.864685"
  },
  "test_fix_demo.py": {
    "hash": "6c2932043970893d531de5cff9775a64a68da1ddae7a2d1a2a23d5b5fdf7c357",
    "result": {
      "filepath": "test_fix_demo.py",
      "language": "Python",
      "framework": null,
      "issues": [
        {
          "line": 18,
          "severity": "medium",
          "category": "Input Validation",
          "description": "Potential SQL injection vulnerability due to string formatting of SQL query",
          "cvss": 6.5,
          "compliance_violations": [
            "OWASP Top 10 - A1: Injection"
          ],
          "remediation": "Use parameterized queries to prevent SQL injection",
          "kb_rule": "Input Validation",
          "rfc_document": "general_security.md, sample_kb_content.md, general_security.md, sample_kb_content.md",
          "rule_source": "OWASP Top 10 - A1: Injection",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        },
        {
          "line": 5,
          "severity": "low",
          "category": "Secrets Management",
          "description": "API key is retrieved from environment variable, which is a good practice",
          "cvss": 3.1,
          "compliance_violations": [],
          "remediation": "No remediation needed",
          "kb_rule": "Secrets Management",
          "rfc_document": "general_security.md, sample_kb_content.md, general_security.md, sample_kb_content.md",
          "rule_source": "N/A",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        },
        {
          "line": 7,
          "severity": "low",
          "category": "Secrets Management",
          "description": "API key is retrieved from AWS Secrets Manager, which is a good practice",
          "cvss": 3.1,
          "compliance_violations": [],
          "remediation": "No remediation needed",
          "kb_rule": "Secrets Management",
          "rfc_document": "general_security.md, sample_kb_content.md, general_security.md, sample_kb_content.md",
          "rule_source": "N/A",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        },
        {
          "line": 11,
          "severity": "low",
          "category": "Secrets Management",
          "description": "Database password is retrieved from AWS Secrets Manager, which is a good practice",
          "cvss": 3.1,
          "compliance_violations": [],
          "remediation": "No remediation needed",
          "kb_rule": "Secrets Management",
          "rfc_document": "general_security.md, sample_kb_content.md, general_security.md, sample_kb_content.md",
          "rule_source": "N/A",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        },
        {
          "line": 23,
          "severity": "low",
          "category": "Sensitive Data Handling",
          "description": "Full card number is not logged, which is a good practice",
          "cvss": 3.1,
          "compliance_violations": [],
          "remediation": "No remediation needed",
          "kb_rule": "N/A",
          "rfc_document": "general_security.md, sample_kb_content.md, general_security.md, sample_kb_content.md",
          "rule_source": "N/A",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/general_security.md",
            "s3://ai-security-kb-docs-2025/sample_kb_content.md"
          ]
        }
      ],
      "fixed": true,
      "compliance_violations": [
        "OWASP Top 10 - A1: Injection"
      ]
    },
    "timestamp": "2025-10-10T17:36:34.114065"
  },
  "test_new_insecure.py": {
    "hash": "91d78b52d21b6aba55407c45cbdd81eae70cd042a9cf4cfc0151c75d0c4b573e",
    "result": {
      "filepath": "test_new_insecure.py",
      "language": "Python",
      "framework": null,
      "issues": [
        {
          "line": 18,
          "severity": "high",
          "category": "Command Injection",
          "description": "The `execute_command` function is vulnerable to command injection due to the use of string formatting to build the command.",
          "cvss": 7.5,
          "compliance_violations": [
            "OWASP Top 10 A1: Injection"
          ],
          "remediation": "Use parameterized queries or a safe command execution library to avoid command injection vulnerabilities.",
          "kb_rule": "Input Validation",
          "rfc_document": "sample_kb_content.md, general_security.md",
          "rule_source": "OWASP Top 10 A1: Injection",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/general_security.md"
          ]
        },
        {
          "line": 33,
          "severity": "medium",
          "category": "Secrets Management",
          "description": "The `log_sensitive_data` function stores sensitive information (credit card and SSN) in the AWS Secrets Manager, which may not be the most secure way to handle sensitive data.",
          "cvss": 5.9,
          "compliance_violations": [
            "PCI DSS 3.2.1 Requirement 3: Protect stored cardholder data"
          ],
          "remediation": "Consider using a more secure method to store and protect sensitive data, such as encrypting the data before storing it or using a dedicated secrets management service.",
          "kb_rule": "Secrets Management",
          "rfc_document": "sample_kb_content.md, general_security.md",
          "rule_source": "PCI DSS 3.2.1 Requirement 3: Protect stored cardholder data",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/general_security.md"
          ]
        },
        {
          "line": 41,
          "severity": "high",
          "category": "Unsafe Deserialization",
          "description": "The `unsafe_deserialization` function is vulnerable to unsafe deserialization, as it uses the `pickle.loads` function to deserialize untrusted data.",
          "cvss": 8.1,
          "compliance_violations": [
            "OWASP Top 10 A8: Insecure Deserialization"
          ],
          "remediation": "Avoid using the `pickle` module to deserialize untrusted data. Instead, use a safer serialization/deserialization library or implement proper input validation and sanitization.",
          "kb_rule": "No KB rules found",
          "rfc_document": "sample_kb_content.md, general_security.md",
          "rule_source": "OWASP Top 10 A8: Insecure Deserialization",
          "s3_sources": [
            "s3://ai-security-kb-docs-2025/sample_kb_content.md",
            "s3://ai-security-kb-docs-2025/general_security.md"
          ]
        }
      ],
      "fixed": true,
      "compliance_violations": [
        "OWASP Top 10 A8: Insecure Deserialization",
        "OWASP Top 10 A1: Injection",
        "PCI DSS 3.2.1 Requirement 3: Protect stored cardholder data"
      ]
    },
    "timestamp": "2025-10-10T17:37:12.663219"
  }
}